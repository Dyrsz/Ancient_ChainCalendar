// Autoguardado. Título y resto de cosas fijos. Solo cambia las cadenas.

PFont fArial;
PFont fImpact;
PFont fAndalus;
PFont fGabrielle;
Month[] y2015 = new Month[8];
boolean menAc;
String title = "Don't break the chain";
String[] dataChain = new String[8];

void setup() {
  size(940, 620);
  fArial = createFont("Arial",25,true);
  fImpact = createFont("Impact", 25, true);
  fAndalus = createFont("Andalus", 25, true);
  fGabrielle = createFont("Gabrielle", 25, true);
  y2015[0] = new Month("Mayo", byte(31), 4, 140, 100);      // 1: 80, 360
  y2015[1] = new Month("Junio", byte(30), 0, 360, 100);
  y2015[2] = new Month("Julio", byte(31), 2, 580, 100);
  y2015[3] = new Month("Agosto", byte(31), 5, 800, 100);
  y2015[4] = new Month("Septiembre", byte(30), 1, 140, 370);
  y2015[5] = new Month("Octubre", byte(31), 3, 360, 370);
  y2015[6] = new Month("Noviembre", byte(30), 6, 580, 370);
  y2015[7] = new Month("Diciembre", byte(31), 1, 800, 370);
  
  String[] dataLoad = loadStrings("Data.cpp");
  for (int i = 0; i < 8; i++) {
    y2015[i].cchain = int(split(dataLoad[i],','));
  }
}

void draw() {
  background(0);
  noStroke();
  textFont(fGabrielle, 28);
  textAlign(LEFT);
  fill(200, 0, 0, 180);
  ellipse(120, 30, 20, 10);
  fill(0, 0, 200, 160);
  ellipse(250, 30, 20, 10);
  
  fill(200);
  text("Pintura", 140, 40);
  text("Leer", 270, 40);
  
  textFont(fImpact, 26);
  
  fill(0, 100, 100, 150);
  text(title, 2*width/3, 40);
  fill(200);
  text("2.015", width/2-30, 70);    // 1: 40
  for (int i1 = 0; i1 < 8; i1++) {
    y2015[i1].display(!menAc);
  }
  if (menAc) {
    for (int i2 = 0; i2 < 8; i2++) {
      for (int i0 = 0; i0 < y2015[i2].ndays; i0++) {
         if (y2015[i2].bdays[i0]) {
            y2015[i2].menu(i0);
         } 
      }
    }
  }
}

void mouseClicked() {
  if (menAc) {
    menAc = false;
    for (int i2 = 0; i2 < 8; i2++) {
      for(int i0 = 0; i0 < y2015[i2].ndays; i0++) {
        y2015[i2].bdays[i0] = false;
        for (int i3 = 0; i3 < 4; i3++) {
          if (y2015[i2].cchainE[i0][i3]) {
            y2015[i2].cchain[i0] = (i3+1)%4;
          }
        }
      }
      dataChain[i2] = join(nf(y2015[i2].cchain, 0), ","); 
    }
    saveStrings("Data.cpp", dataChain);
  } else {
    for (int i2 = 0; i2 < 8; i2++) {
      for (int i0 = 0; i0 < y2015[i2].ndays; i0++) {
         if (y2015[i2].bdays[i0]) {
            menAc = true;
         } 
      }
    }
  }
}

/*
int countChain(int[] vec) {
  int[] vecbyte = new int[3];
   for (int i = 0; i < vec.length; i++) {
     if (vec[i] > 0) vecbyte[vec[i]-1]++;
   }
   for (int i = 0; i < 3; i++) {
     if (vecbyte[i] >= vec.length/3 && vecbyte[i] > vecbyte[(i+1)%3] && vecbyte[i] > vecbyte[(i+2)%3]) return i+1;
   }
   return 0;
}
*/

class Month {
  String name;
  byte ndays;
  int iweek;
  int x;
  int y;
  byte alarg = 0;
  boolean[] bdays;
  int[] cdaysx;
  int[] cdaysy;
  boolean[][] cchainE;
  int[] cchain;
  String[] notes;
  
  Month(String tname, byte tndays, int tiweek, int tx, int ty) {
    name = tname;
    ndays = tndays;
    iweek = tiweek;
    x = tx;
    y = ty;
    if ((iweek >= 5 && ndays == 31) || (iweek == 6 && ndays == 30)) alarg = 1;
    bdays = new boolean[ndays];
    cdaysx = new int[ndays];
    cdaysy = new int[ndays];
    cchainE = new boolean[ndays][4];
    cchain = new int[ndays];
    notes = new String[ndays];
  }
  
  void display(boolean interact) {
    textAlign(CENTER);
    textFont(fArial, 26);
    fill(200);
    text(name, x, y-10);
    stroke(90);
    /*
    int cc = countChain(cchain);
    if (cc == 0) fill(0, 0, 0, 200);
    if (cc == 1) fill(200, 0, 0, 200);
    if (cc == 2) fill(0, 0, 200, 200);
    if (cc == 3) fill(200, 200, 200, 200);
    */
    fill(0, 0, 0, 200);
    ellipse(x,y, 5, 5);
    fill(180);
    textFont(fAndalus, 20);
    text("L   M   X   J   V   S   D", x, y+25);
    stroke(80);
    for (int i = -1; i < 7; i++) {
      line(x-64+25*i, y+25, x-64+25*i, y+185+30*alarg);
    }
    for (int i = 0; i < 6+alarg; i++) {
      line(x-95, y+30+30*i, x+91, y+30+30*i); 
    }
    textFont(fAndalus, 16);
    byte y1 = 0;
    for (int i = 0; i < ndays; i++) {
      fill(160);
      text(i+1, x-77+((i+iweek)%7)*25, y+48+30*y1);
      cdaysx[i] = x-77+((i+iweek)%7)*25;
      cdaysy[i] = y+48+30*y1;
      if (cchain[i] > 0) {
        if (cchain[i] == 1) fill(200, 0, 0, 200);
        if (cchain[i] == 2) fill(0, 0, 200, 200);
        if (cchain[i] == 3) fill(200, 200, 200, 200);
        ellipse(cdaysx[i], cdaysy[i]+5, 10, 5);
      }
      if (interact) {
        if (cdaysx[i]-9 <= mouseX && mouseX <= cdaysx[i]+10 && cdaysy[i]-15 <= mouseY && mouseY <= cdaysy[i]+9) {
            fill(150, 0, 150, 70);
            rect(cdaysx[i]-9, cdaysy[i]-15,19,24);
            bdays[i] = true;
        } else {
           bdays[i] = false; 
        }
      }
      if (cdaysx[i]-x > 65) {
        y1++;
      }
    }
  }
  
  void menu(int index) {
    fill(150, 0, 150, 60);
    rect(cdaysx[index]-9, cdaysy[index]-15,19,24);
    fill(0, 0, 0, 250);
    int s = 1;
    if(name == "Agosto" || name == "Diciembre") s = -1;
    beginShape();
      vertex(cdaysx[index]+20*s, cdaysy[index]);
      vertex(cdaysx[index]+30*s, cdaysy[index]-40);
      vertex(cdaysx[index]+120*s, cdaysy[index]-40);
      vertex(cdaysx[index]+120*s, cdaysy[index]+40);
      vertex(cdaysx[index]+30*s, cdaysy[index]+40);
    endShape(CLOSE); 
    for (int j = 0; j < 3; j++) {
      if (j == 0) fill(200, 0, 0, 200);
      if (j == 1) fill(0, 0, 200, 200);
      if (j == 2) fill(200, 200, 200, 200);
        ellipse(cdaysx[index]-25+75*s+25*j, cdaysy[index]-20, 10, 5);
        if (cdaysx[index]-35+75*s+25*j <= mouseX && mouseX <= cdaysx[index]-15+75*s+25*j && cdaysy[index]-30 <= mouseY && mouseY <= cdaysy[index]-10) {
          fill(150, 0, 150, 70);
          rect(cdaysx[index]-35+75*s+25*j, cdaysy[index]-30,20,20);
          cchainE[index][j] = true;
        } else {
          cchainE[index][j] = false; 
        }
    }
    textFont(fAndalus, 16);
    fill(160);
    text("Borrar", cdaysx[index]-(5/2)+s*(70+(5/2)), cdaysy[index]+20);
    if (cdaysx[index]-(5/2)+s*(70+(5/2))-25 <= mouseX && mouseX <= cdaysx[index]-(5/2)+s*(70+(5/2))+25 && cdaysy[index]+4 <= mouseY && mouseY <= cdaysy[index]+24) {
      fill(150, 0, 150, 70);
      rect(cdaysx[index]-(5/2)+s*(70+(5/2))-25, cdaysy[index]+4,52,20);
      cchainE[index][3] = true;
    } else {
      cchainE[index][3] = false;
    }
  }
}